Ê
b/home/jackson/workspace/xUnitTestSamples/01-Unit-Tests/xUnitTestSamples.Features/Clients/Client.cs
	namespace 	
xUnitTestSamples
 
. 
Features #
.# $
Clients$ +
{ 
public 

class 
Cliente 
: 
Entity !
{ 
public		 
string		 
Nome		 
{		 
get		  
;		  !
private		" )
set		* -
;		- .
}		/ 0
public

 
string

 
	Sobrenome

 
{

  !
get

" %
;

% &
private

' .
set

/ 2
;

2 3
}

4 5
public 
DateTime 
DataNascimento &
{' (
get) ,
;, -
private. 5
set6 9
;9 :
}; <
public 
DateTime 
DataCadastro $
{% &
get' *
;* +
private, 3
set4 7
;7 8
}9 :
public 
string 
Email 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
bool 
Ativo 
{ 
get 
;  
private! (
set) ,
;, -
}. /
	protected 
Cliente 
( 
) 
{ 
} 
public 
Cliente 
( 
Guid 
id 
, 
string  &
nome' +
,+ ,
string- 3
	sobrenome4 =
,= >
DateTime? G
dataNascimentoH V
,V W
stringX ^
email_ d
,d e
boolf j
ativok p
,p q
DateTimer z
dataCadastro	{ ‡
)
‡ ˆ
{ 	
Id 
= 
id 
; 
Nome 
= 
nome 
; 
	Sobrenome 
= 
	sobrenome !
;! "
DataNascimento 
= 
dataNascimento +
;+ ,
Email 
= 
email 
; 
Ativo 
= 
ativo 
; 
DataCadastro 
= 
dataCadastro '
;' (
} 	
public 
string 
NomeCompleto "
(" #
)# $
=>% '
$"( *
{* +
Nome+ /
}/ 0
{1 2
	Sobrenome2 ;
}; <
"< =
;= >
public 
bool 

EhEspecial 
( 
)  
=>! #
DataCadastro$ 0
<1 2
DateTime3 ;
.; <
Now< ?
.? @
AddYears@ H
(H I
-I J
$numJ K
)K L
&&M O
AtivoP U
;U V
public!! 
void!! 
Inativar!! 
(!! 
)!! 
=>!! !
Ativo!!" '
=!!( )
false!!* /
;!!/ 0
public## 
override## 
bool## 
EhValido## %
(##% &
)##& '
{$$ 	
ValidationResult%% 
=%% 
new%% "
ClienteValidacao%%# 3
(%%3 4
)%%4 5
.%%5 6
Validate%%6 >
(%%> ?
this%%? C
)%%C D
;%%D E
return&& 
ValidationResult&& #
.&&# $
IsValid&&$ +
;&&+ ,
}'' 	
}(( 
})) È
t/home/jackson/workspace/xUnitTestSamples/01-Unit-Tests/xUnitTestSamples.Features/Clients/ClienteEmailNotification.cs
	namespace 	
xUnitTestSamples
 
. 
Features #
.# $
Clients$ +
{ 
public 

class $
ClienteEmailNotification )
:* +
INotification, 9
{ 
public 
string 
Origem 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
public		 
string		 
Destino		 
{		 
get		  #
;		# $
private		% ,
set		- 0
;		0 1
}		2 3
public 
string 
Assunto 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 
string 
Mensagem 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public $
ClienteEmailNotification '
(' (
string( .
origem/ 5
,5 6
string7 =
destino> E
,E F
stringG M
assuntoN U
,U V
stringW ]
mensagem^ f
)f g
{ 	
Origem 
= 
origem 
; 
Destino 
= 
destino 
; 
Assunto 
= 
assunto 
; 
Mensagem 
= 
mensagem 
;  
} 	
} 
} »&
j/home/jackson/workspace/xUnitTestSamples/01-Unit-Tests/xUnitTestSamples.Features/Clients/ClienteService.cs
	namespace 	
xUnitTestSamples
 
. 
Features #
.# $
Clients$ +
{ 
public 

class 
ClienteService 
:  !
IClienteService" 1
{ 
private		 
readonly		 
IClienteRepository		 +
_clienteRepository		, >
;		> ?
private

 
readonly

 
	IMediator

 "
	_mediator

# ,
;

, -
public 
ClienteService 
( 
IClienteRepository 0
clienteRepository1 B
,B C
	IMediatorD M
mediatorN V
)V W
{ 	
_clienteRepository 
=  
clienteRepository! 2
;2 3
	_mediator 
= 
mediator  
;  !
} 	
public 
IEnumerable 
< 
Cliente "
>" #
ObterTodosAtivos$ 4
(4 5
)5 6
=> 
_clienteRepository !
.! "

ObterTodos" ,
(, -
)- .
.. /
Where/ 4
(4 5
c5 6
=>7 9
c: ;
.; <
Ativo< A
)A B
;B C
public 
void 
	Adicionar 
( 
Cliente %
cliente& -
)- .
{ 	
if 
( 
! 
cliente 
. 
EhValido !
(! "
)" #
)# $
return 
; 
_clienteRepository 
. 
	Adicionar (
(( )
cliente) 0
)0 1
;1 2
	_mediator 
. 
Publish 
( 
new !$
ClienteEmailNotification" :
(: ;
$str; I
,I J
clienteK R
.R S
EmailS X
,X Y
$strZ _
,_ `
$stra m
)m n
)n o
;o p
} 	
public 
void 
	Atualizar 
( 
Cliente %
cliente& -
)- .
{ 	
if   
(   
!   
cliente   
.   
EhValido   !
(  ! "
)  " #
)  # $
return!! 
;!! 
_clienteRepository## 
.## 
	Atualizar## (
(##( )
cliente##) 0
)##0 1
;##1 2
	_mediator$$ 
.$$ 
Publish$$ 
($$ 
new$$ !$
ClienteEmailNotification$$" :
($$: ;
$str$$; I
,$$I J
cliente$$K R
.$$R S
Email$$S X
,$$X Y
$str$$Z d
,$$d e
$str$$f v
)$$v w
)$$w x
;$$x y
}%% 	
public'' 
void'' 
Inativar'' 
('' 
Cliente'' $
cliente''% ,
)'', -
{(( 	
if)) 
()) 
!)) 
cliente)) 
.)) 
EhValido)) !
())! "
)))" #
)))# $
return** 
;** 
cliente,, 
.,, 
Inativar,, 
(,, 
),, 
;,, 
_clienteRepository-- 
.-- 
	Atualizar-- (
(--( )
cliente--) 0
)--0 1
;--1 2
	_mediator.. 
... 
Publish.. 
(.. 
new.. !$
ClienteEmailNotification.." :
(..: ;
$str..; I
,..I J
cliente..K R
...R S
Email..S X
,..X Y
$str..Z e
,..e f
$str..g x
)..x y
)..y z
;..z {
}// 	
public11 
void11 
Remover11 
(11 
Cliente11 #
cliente11$ +
)11+ ,
{22 	
_clienteRepository33 
.33 
Remover33 &
(33& '
cliente33' .
.33. /
Id33/ 1
)331 2
;332 3
	_mediator44 
.44 
Publish44 
(44 
new44 !$
ClienteEmailNotification44" :
(44: ;
$str44; I
,44I J
cliente44K R
.44R S
Email44S X
,44X Y
$str44Z a
,44a b
$str44c {
)44{ |
)44| }
;44} ~
}55 	
public77 
void77 
Dispose77 
(77 
)77 
=>88 
_clienteRepository88 !
.88! "
Dispose88" )
(88) *
)88* +
;88+ ,
}99 
}:: ß
l/home/jackson/workspace/xUnitTestSamples/01-Unit-Tests/xUnitTestSamples.Features/Clients/ClienteValidacao.cs
	namespace 	
xUnitTestSamples
 
. 
Features #
.# $
Clients$ +
{ 
public 

class 
ClienteValidacao !
:" #
AbstractValidator$ 5
<5 6
Cliente6 =
>= >
{ 
public 
ClienteValidacao 
(  
)  !
{		 	
RuleFor

 
(

 
c

 
=>

 
c

 
.

 
Nome

 
)

  
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
$str( Y
)Y Z
. 
Length 
( 
$num 
, 
$num 
) 
.  
WithMessage  +
(+ ,
$str, V
)V W
;W X
RuleFor 
( 
c 
=> 
c 
. 
	Sobrenome $
)$ %
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
$str( ^
)^ _
. 
Length 
( 
$num 
, 
$num 
) 
.  
WithMessage  +
(+ ,
$str, [
)[ \
;\ ]
RuleFor 
( 
c 
=> 
c 
. 
DataNascimento )
)) *
. 
NotEmpty 
( 
) 
. 
Must 
( 
HaveMinimumAge $
)$ %
. 
WithMessage 
( 
$str A
)A B
;B C
RuleFor 
( 
c 
=> 
c 
. 
Email  
)  !
. 
NotEmpty 
( 
) 
. 
EmailAddress 
( 
) 
;  
RuleFor 
( 
c 
=> 
c 
. 
Id 
) 
. 
NotEqual 
( 
Guid 
. 
Empty $
)$ %
;% &
} 	
public 
static 
bool 
HaveMinimumAge )
() *
DateTime* 2
	birthDate3 <
)< =
=>> @
	birthDateA J
<=K M
DateTimeN V
.V W
NowW Z
.Z [
AddYears[ c
(c d
-d e
$nume g
)g h
;h i
}   
}!! Î
n/home/jackson/workspace/xUnitTestSamples/01-Unit-Tests/xUnitTestSamples.Features/Clients/IClienteRepository.cs
	namespace 	
xUnitTestSamples
 
. 
Features #
.# $
Clients$ +
{ 
public 

	interface 
IClienteRepository '
:( )
IRepository* 5
<5 6
Cliente6 =
>= >
{ 
Cliente 
ObterPorEmail 
( 
string $
email% *
)* +
;+ ,
} 
}		 ¥
k/home/jackson/workspace/xUnitTestSamples/01-Unit-Tests/xUnitTestSamples.Features/Clients/IClienteService.cs
	namespace 	
xUnitTestSamples
 
. 
Features #
.# $
Clients$ +
{ 
public 

	interface 
IClienteService $
:% &
IDisposable' 2
{ 
IEnumerable 
< 
Cliente 
> 
ObterTodosAtivos -
(- .
). /
;/ 0
void

 
	Adicionar

 
(

 
Cliente

 
cliente

 &
)

& '
;

' (
void 
	Atualizar 
( 
Cliente 
cliente &
)& '
;' (
void 
Remover 
( 
Cliente 
cliente $
)$ %
;% &
void 
Inativar 
( 
Cliente 
cliente %
)% &
;& '
} 
} ¾%
f/home/jackson/workspace/xUnitTestSamples/01-Unit-Tests/xUnitTestSamples.Features/Core/CpfValidation.cs
	namespace 	
xUnitTestSamples
 
. 
Features #
.# $
Core$ (
{ 
public 

class 
CpfValidation 
{ 
public 
bool 
IsValid 
( 
string "
cpf# &
)& '
{ 	
var 
multiplicador1 
=  
new! $
[$ %
]% &
{' (
$num) +
,+ ,
$num- .
,. /
$num0 1
,1 2
$num3 4
,4 5
$num6 7
,7 8
$num9 :
,: ;
$num< =
,= >
$num? @
,@ A
$numB C
}D E
;E F
var 
multiplicador2 
=  
new! $
[$ %
]% &
{' (
$num) +
,+ ,
$num- /
,/ 0
$num1 2
,2 3
$num4 5
,5 6
$num7 8
,8 9
$num: ;
,; <
$num= >
,> ?
$num@ A
,A B
$numC D
,D E
$numF G
}H I
;I J
cpf		 
=		 
cpf		 
.		 
Trim		 
(		 
)		 
;		 
cpf

 
=

 
cpf

 
.

 
Replace

 
(

 
$str

 !
,

! "
$str

# %
)

% &
.

& '
Replace

' .
(

. /
$str

/ 2
,

2 3
$str

4 6
)

6 7
;

7 8
if 
( 
cpf 
. 
Length 
!= 
$num  
)  !
return 
false 
; 
var 
tempCpf 
= 
cpf 
. 
	Substring '
(' (
$num( )
,) *
$num+ ,
), -
;- .
var 
soma 
= 
$num 
; 
for 
( 
var 
i 
= 
$num 
; 
i 
< 
$num  !
;! "
i# $
++$ &
)& '
soma 
+= 
int 
. 
Parse !
(! "
tempCpf" )
[) *
i* +
]+ ,
., -
ToString- 5
(5 6
)6 7
)7 8
*9 :
multiplicador1; I
[I J
iJ K
]K L
;L M
var 
resto 
= 
soma 
% 
$num !
;! "
if 
( 
resto 
< 
$num 
) 
resto 
= 
$num 
; 
else 
resto 
= 
$num 
- 
resto "
;" #
var 
digito 
= 
resto 
. 
ToString '
(' (
)( )
;) *
tempCpf 
+= 
digito 
; 
soma 
= 
$num 
; 
for 
( 
var 
i 
= 
$num 
; 
i 
< 
$num  "
;" #
i$ %
++% '
)' (
soma 
+= 
int 
. 
Parse !
(! "
tempCpf" )
[) *
i* +
]+ ,
., -
ToString- 5
(5 6
)6 7
)7 8
*9 :
multiplicador2; I
[I J
iJ K
]K L
;L M
resto 
= 
soma 
% 
$num 
; 
if 
( 
resto 
< 
$num 
) 
resto 
= 
$num 
; 
else 
resto   
=   
$num   
-   
resto   "
;  " #
digito!! 
+=!! 
resto!! 
.!! 
ToString!! $
(!!$ %
)!!% &
;!!& '
return"" 
cpf"" 
."" 
EndsWith"" 
(""  
digito""  &
)""& '
;""' (
}## 	
}$$ 
}%% ’
_/home/jackson/workspace/xUnitTestSamples/01-Unit-Tests/xUnitTestSamples.Features/Core/Entity.cs
	namespace 	
xUnitTestSamples
 
. 
Features #
.# $
Core$ (
{ 
public 

abstract 
class 
Entity  
{ 
public 
Guid 
Id 
{ 
get 
; 
	protected '
set( +
;+ ,
}- .
public

 
ValidationResult

 
ValidationResult

  0
{

1 2
get

3 6
;

6 7
	protected

8 A
set

B E
;

E F
}

G H
public 
virtual 
bool 
EhValido $
($ %
)% &
=> 
throw 
new #
NotImplementedException 0
(0 1
)1 2
;2 3
public 
override 
bool 
Equals #
(# $
object$ *
obj+ .
). /
{ 	
var 
	compareTo 
= 
obj 
as  "
Entity# )
;) *
if 
( 
ReferenceEquals 
(  
this  $
,$ %
	compareTo& /
)/ 0
)0 1
return2 8
true9 =
;= >
if 
( 
ReferenceEquals 
(  
null  $
,$ %
	compareTo& /
)/ 0
)0 1
return2 8
false9 >
;> ?
return 
Id 
. 
Equals 
( 
	compareTo &
.& '
Id' )
)) *
;* +
} 	
public 
static 
bool 
operator #
==$ &
(& '
Entity' -
a. /
,/ 0
Entity1 7
b8 9
)9 :
{ 	
if 
( 
ReferenceEquals 
(  
a  !
,! "
null# '
)' (
&&) +
ReferenceEquals, ;
(; <
b< =
,= >
null? C
)C D
)D E
return 
true 
; 
if 
( 
ReferenceEquals 
(  
a  !
,! "
null# '
)' (
||) +
ReferenceEquals, ;
(; <
b< =
,= >
null? C
)C D
)D E
return 
false 
; 
return!! 
a!! 
.!! 
Equals!! 
(!! 
b!! 
)!! 
;!! 
}"" 	
public$$ 
static$$ 
bool$$ 
operator$$ #
!=$$$ &
($$& '
Entity$$' -
a$$. /
,$$/ 0
Entity$$1 7
b$$8 9
)$$9 :
=>%% 
!%% 
(%% 
a%% 
==%% 
b%% 
)%% 
;%% 
public'' 
override'' 
int'' 
GetHashCode'' '
(''' (
)''( )
=>(( 
((( 
GetType(( 
((( 
)(( 
.(( 
GetHashCode(( %
(((% &
)((& '
*((( )
$num((* -
)((- .
+((/ 0
Id((1 3
.((3 4
GetHashCode((4 ?
(((? @
)((@ A
;((A B
public** 
override** 
string** 
ToString** '
(**' (
)**( )
=>++ 
GetType++ 
(++ 
)++ 
.++ 
Name++ 
+++  
$str++! (
+++) *
Id+++ -
+++. /
$str++0 3
;++3 4
},, 
}-- ”
d/home/jackson/workspace/xUnitTestSamples/01-Unit-Tests/xUnitTestSamples.Features/Core/IRepository.cs
	namespace 	
xUnitTestSamples
 
. 
Features #
.# $
Core$ (
{ 
public 

	interface 
IRepository  
<  !
TEntity! (
>( )
:* +
IDisposable, 7
where8 =
TEntity> E
:F G
EntityH N
{ 
void		 
	Adicionar		 
(		 
TEntity		 
entity		 %
)		% &
;		& '
TEntity 

ObterPorId 
( 
Guid 
id  "
)" #
;# $
IEnumerable 
< 
TEntity 
> 

ObterTodos '
(' (
)( )
;) *
void 
	Atualizar 
( 
TEntity 
entity %
)% &
;& '
void 
Remover 
( 
Guid 
id 
) 
; 
IEnumerable 
< 
TEntity 
> 
Buscar #
(# $

Expression$ .
<. /
Func/ 3
<3 4
TEntity4 ;
,; <
bool= A
>A B
>B C
	predicateD M
)M N
;N O
int 
Commit 
( 
) 
; 
} 
} 