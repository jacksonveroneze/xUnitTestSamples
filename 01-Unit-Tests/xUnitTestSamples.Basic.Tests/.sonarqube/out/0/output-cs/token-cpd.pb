—'
V/home/jackson/workspace/xUnitTestSamples/01-Unit-Tests/xUnitTestSamples.Basic/Agent.cs
	namespace 	
xUnitTestSamples
 
. 
Basic  
{ 
public 

class 
Person 
{ 
public 
string 
Name 
{ 
get  
;  !
	protected" +
set, /
;/ 0
}1 2
public		 
string		 
Nickname		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
}

 
public 

class 
Agent 
: 
Person 
{ 
public 
double 
Salary 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
public 
ProfessionalLevel  
ProfessionalLevel! 2
{3 4
get5 8
;8 9
private: A
setB E
;E F
}G H
public 
IList 
< 
string 
> 
Skills #
{$ %
get& )
;) *
private+ 2
set3 6
;6 7
}8 9
public 
Agent 
( 
string 
name  
,  !
double" (
salary) /
)/ 0
{ 	
Name 
= 
string 
. 
IsNullOrEmpty '
(' (
name( ,
), -
?. /
$str0 8
:9 :
name; ?
;? @
DefineSalary 
( 
salary 
)  
;  !
DefineSkills 
( 
) 
; 
} 	
public 
void 
DefineSalary  
(  !
double! '
salary( .
). /
{ 	
if 
( 
salary 
< 
$num 
) 
throw #
new$ '
	Exception( 1
(1 2
$str2 Q
)Q R
;R S
Salary 
= 
salary 
; 
if 
( 
salary 
< 
$num 
) 
ProfessionalLevel 0
=1 2
ProfessionalLevel3 D
.D E
JuniorE K
;K L
else 
if 
( 
salary 
>= 
$num #
&&$ &
salary' -
<. /
$num0 4
)4 5
ProfessionalLevel6 G
=H I
ProfessionalLevelJ [
.[ \
Pleno\ a
;a b
else   
if   
(   
salary   
>=   
$num   #
)  # $
ProfessionalLevel  % 6
=  7 8
ProfessionalLevel  9 J
.  J K
Senior  K Q
;  Q R
}!! 	
private## 
void## 
DefineSkills## !
(##! "
)##" #
{$$ 	
var%% 
skillsBasics%% 
=%% 
new%% "
List%%# '
<%%' (
string%%( .
>%%. /
(%%/ 0
)%%0 1
{&& 
$str'' '
,''' (
$str(( 
})) 
;)) 
Skills++ 
=++ 
skillsBasics++ !
;++! "
switch-- 
(-- 
ProfessionalLevel-- %
)--% &
{.. 
case// 
ProfessionalLevel// &
.//& '
Pleno//' ,
://, -
Skills00 
.00 
Add00 
(00 
$str00 '
)00' (
;00( )
break11 
;11 
case22 
ProfessionalLevel22 &
.22& '
Senior22' -
:22- .
Skills33 
.33 
Add33 
(33 
$str33 '
)33' (
;33( )
Skills44 
.44 
Add44 
(44 
$str44 .
)44. /
;44/ 0
break55 
;55 
}66 
}77 	
}88 
public:: 

enum:: 
ProfessionalLevel:: !
{;; 
Junior<< 
,<< 
Pleno== 
,== 
Senior>> 
}?? 
publicAA 

classAA 
AgentFactoryAA 
{BB 
publicCC 
staticCC 
AgentCC 
CreateCC "
(CC" #
stringCC# )
nameCC* .
,CC. /
doubleCC0 6
salaryCC7 =
)CC= >
{DD 	
returnEE 
newEE 
AgentEE 
(EE 
nameEE !
,EE! "
salaryEE# )
)EE) *
;EE* +
}FF 	
}GG 
}HH ƒ
U/home/jackson/workspace/xUnitTestSamples/01-Unit-Tests/xUnitTestSamples.Basic/Calc.cs
	namespace 	
xUnitTestSamples
 
. 
Basic  
{ 
public 

class 
Calc 
{ 
public 
int 
Sum 
( 
int 
n1 
, 
int "
n2# %
)% &
=>' )
n1* ,
+- .
n2/ 1
;1 2
public 
int 
Sub 
( 
int 
n1 
, 
int "
n2# %
)% &
=>' )
n1* ,
-- .
n2/ 1
;1 2
} 
}		 ¦
]/home/jackson/workspace/xUnitTestSamples/01-Unit-Tests/xUnitTestSamples.Basic/StringsTools.cs
	namespace 	
xUnitTestSamples
 
. 
Basic  
{ 
public 

class 
StringsTools 
{ 
public 
string 
Join 
( 
string !
name" &
,& '
string( .
surName/ 6
)6 7
{ 	
return 
$" 
{ 
name 
} 
{ 
surName $
}$ %
"% &
;& '
} 	
}		 
}

 